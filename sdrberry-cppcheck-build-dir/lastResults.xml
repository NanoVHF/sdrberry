<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.5"/>
    <errors>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;RawAudioOutput&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;RawAudioOutput&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="AudioOutput.cpp" sinceDate="27-7-2021">
            <location file="AudioOutput.h" line="74"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;write&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;write&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="AudioOutput.cpp" sinceDate="27-7-2021">
            <location file="AudioOutput.h" line="77" info="Function in derived class"/>
            <location file="AudioOutput.h" line="28" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;write&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;write&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="AudioOutput.cpp" sinceDate="27-7-2021">
            <location file="AudioOutput.h" line="102" info="Function in derived class"/>
            <location file="AudioOutput.h" line="28" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;write&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;write&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="AudioOutput.cpp" sinceDate="27-7-2021">
            <location file="AudioOutput.h" line="138" info="Function in derived class"/>
            <location file="AudioOutput.h" line="28" info="Virtual function in base class"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &amp;#039;FMDemodulator&amp;#039; does not have a constructor although it has private member variables." verbose="The class &amp;#039;FMDemodulator&amp;#039; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="FMDemodulator.h" line="8"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ModuleVersion&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ModuleVersion&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="SoapySDR\Modules.hpp" line="114"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;String&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;String&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="70"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;String&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;String&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="73"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="227"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="229"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="231"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="233"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="235"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="237"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="239"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="241"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="243"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StringSumHelper&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FMDemodulator.cpp" sinceDate="27-7-2021">
            <location file="wstring.h" line="245"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &amp;#039;Fftcalc&amp;#039; does not have a constructor although it has private member variables." verbose="The class &amp;#039;Fftcalc&amp;#039; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="Fftcalc.cpp" sinceDate="27-7-2021">
            <location file="Fftcalc.h" line="11"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;FFTW_NO_Complex;I;_Complex_I;complex&amp;#039; since the value of &amp;#039;complex&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;FFTW_NO_Complex;I;_Complex_I;complex&amp;#039; since the value of &amp;#039;complex&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="27-7-2021">
            <location file="Fftcalc.h" line="15"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;FFTW_NO_Complex;I;_Complex_I;complex&amp;#039; since the value of &amp;#039;complex&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;FFTW_NO_Complex;I;_Complex_I;complex&amp;#039; since the value of &amp;#039;complex&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="27-7-2021">
            <location file="Fftcalc.cpp" line="24"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;LowPassFilterRC&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;LowPassFilterRC&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="Filter.cpp" sinceDate="27-7-2021">
            <location file="Filter.h" line="104"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;LowPassFilterIir&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;LowPassFilterIir&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="Filter.cpp" sinceDate="27-7-2021">
            <location file="Filter.h" line="129"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;HighPassFilterIir&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;HighPassFilterIir&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="Filter.cpp" sinceDate="27-7-2021">
            <location file="Filter.h" line="151"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &amp;#039;FmDecoder_executer&amp;#039; does not have a constructor although it has private member variables." verbose="The class &amp;#039;FmDecoder_executer&amp;#039; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="FmDecode.cpp" sinceDate="27-7-2021">
            <location file="FmDecode.h" line="243"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;PhaseDiscriminator&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;PhaseDiscriminator&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="FmDecode.cpp" sinceDate="27-7-2021">
            <location file="FmDecode.h" line="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="FmDecode.cpp" sinceDate="27-7-2021">
            <location file="FmDecode.cpp" line="481"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: audio_mean" verbose="Unused variable: audio_mean" cwe="563" file0="FmDecode.cpp" sinceDate="27-7-2021">
            <location file="FmDecode.cpp" line="501"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: audio_rms" verbose="Unused variable: audio_rms" cwe="563" file0="FmDecode.cpp" sinceDate="27-7-2021">
            <location file="FmDecode.cpp" line="501"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;rc&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;rc&amp;#039; is assigned a value that is never used." cwe="563" file0="FmDecode.cpp" sinceDate="27-7-2021">
            <location file="FmDecode.cpp" line="526"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="FreeSansOblique.cpp" sinceDate="27-7-2021">
            <location file="lvgl\src\misc\lv_style.h" line="374"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="FreeSansOblique.cpp" sinceDate="27-7-2021">
            <location file="lvgl\src\core\lv_obj_style_gen.h" line="172"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="No header in #include" verbose="No header in #include" sinceDate="27-7-2021">
            <location file="lvgl\src\lv_conf_kconfig.h" line="11"/>
        </error>
        <error id="zerodivcond" severity="warning" msg="Either the condition &amp;#039;res_opa_saved==0&amp;#039; is redundant or there is division by zero at line 577." verbose="Either the condition &amp;#039;res_opa_saved==0&amp;#039; is redundant or there is division by zero at line 577." cwe="369" file0="FreeSansOblique24.c" sinceDate="27-7-2021">
            <location file="lvgl\src\misc\lv_color.h" line="577" info="Division by zero"/>
            <location file="lvgl\src\misc\lv_color.h" line="573" info="Assuming that condition &amp;#039;res_opa_saved==0&amp;#039; is not redundant"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &amp;#039;Gui_band&amp;#039; does not have a constructor although it has private member variables." verbose="The class &amp;#039;Gui_band&amp;#039; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="Gui_band.cpp" sinceDate="27-7-2021">
            <location file="Gui_band.h" line="15"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &amp;#039;Settings&amp;#039; does not have a constructor although it has private member variables." verbose="The class &amp;#039;Settings&amp;#039; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="Gui_band.cpp" sinceDate="27-7-2021">
            <location file="Settings.h" line="13"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Option&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Option&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="Gui_band.cpp" sinceDate="27-7-2021">
            <location file="configoption.h" line="23"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;File&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;File&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="Gui_band.cpp" sinceDate="27-7-2021">
            <location file="configfile.h" line="43"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;File&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;File&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="Gui_band.cpp" sinceDate="27-7-2021">
            <location file="configfile.h" line="44"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;band&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;band&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="Gui_band.cpp" sinceDate="27-7-2021">
            <location file="Gui_band.cpp" line="44"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pos_x&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pos_x&amp;#039; is assigned a value that is never used." cwe="563" file0="Gui_band.cpp" sinceDate="27-7-2021">
            <location file="Gui_band.cpp" line="70"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pos_y&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pos_y&amp;#039; is assigned a value that is never used." cwe="563" file0="Gui_band.cpp" sinceDate="27-7-2021">
            <location file="Gui_band.cpp" line="70"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="Gui_band.cpp" sinceDate="27-7-2021">
            <location file="strlib.h" line="105"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &amp;#039;Keyboard&amp;#039; does not have a constructor although it has private member variables." verbose="The class &amp;#039;Keyboard&amp;#039; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="Keyboard.cpp" sinceDate="27-7-2021">
            <location file="Keyboard.h" line="4"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;p[loop]&amp;lt;=&amp;#039;9&amp;#039;&amp;#039; is always true" verbose="Condition &amp;#039;p[loop]&amp;lt;=&amp;#039;9&amp;#039;&amp;#039; is always true" cwe="571" file0="Keyboard.cpp" sinceDate="27-7-2021">
            <location file="Keyboard.cpp" line="31" info="Condition &amp;#039;p[loop]&amp;lt;=&amp;#039;9&amp;#039;&amp;#039; is always true"/>
            <location file="Keyboard.cpp" line="31" info="Assuming that condition &amp;#039;p[loop]&amp;gt;=&amp;#039;0&amp;#039;&amp;#039; is not redundant"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;ss&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;ss&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="Keyboard.cpp" sinceDate="27-7-2021">
            <location file="Keyboard.cpp" line="29"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;kb&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;kb&amp;#039; is assigned a value that is never used." cwe="563" file0="Keyboard.cpp" sinceDate="27-7-2021">
            <location file="Keyboard.cpp" line="44"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;i&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;i&amp;#039; is assigned a value that is never used." cwe="563" file0="Settings.cpp" sinceDate="27-7-2021">
            <location file="Settings.cpp" line="62"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;indent&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;indent&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SoapySDRProbe.cpp" sinceDate="27-7-2021">
            <location file="SoapySDRProbe.cpp" line="79"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;data_c&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;data_c&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ble_interface.cpp" sinceDate="27-7-2021">
            <location file="ble_interface.cpp" line="35"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;ii&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;ii&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ble_interface.cpp" sinceDate="27-7-2021">
            <location file="ble_interface.cpp" line="37"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;buf&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;buf&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ble_interface.cpp" sinceDate="27-7-2021">
            <location file="ble_interface.cpp" line="38"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;ii&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;ii&amp;#039; is assigned a value that is never used." cwe="563" file0="ble_interface.cpp" sinceDate="27-7-2021">
            <location file="ble_interface.cpp" line="37"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;File::fileIoSuccessful&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;File::fileIoSuccessful&amp;#039; is not initialized in the constructor." cwe="398" file0="configfile.cpp" sinceDate="27-7-2021">
            <location file="configfile.cpp" line="12"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;File::fileIoSuccessful&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;File::fileIoSuccessful&amp;#039; is not initialized in the constructor." cwe="398" file0="configfile.cpp" sinceDate="27-7-2021">
            <location file="configfile.cpp" line="23"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;value.find(&amp;#039;,&amp;#039;)!=-1&amp;#039; is always true" verbose="Condition &amp;#039;value.find(&amp;#039;,&amp;#039;)!=-1&amp;#039; is always true" cwe="571" file0="configfile.cpp" sinceDate="27-7-2021">
            <location file="configfile.cpp" line="298"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &amp;#039;option&amp;#039; shadows outer variable" verbose="Local variable &amp;#039;option&amp;#039; shadows outer variable" cwe="398" file0="configfile.cpp" sinceDate="27-7-2021">
            <location file="configfile.cpp" line="295" info="Shadow variable"/>
            <location file="configfile.cpp" line="285" info="Shadowed declaration"/>
        </error>
        <error id="stlIfStrFind" severity="performance" msg="Inefficient usage of string::find() in condition; string::starts_with() could be faster." verbose="Either inefficient or wrong usage of string::find(). string::starts_with() will be faster if string::find&amp;#039;s result is compared with 0, because it will not scan the whole string. If your intention is to check that there are no findings in the string, you should compare with std::string::npos." cwe="597" file0="configfile.cpp" sinceDate="27-7-2021">
            <location file="configfile.cpp" line="293"/>
        </error>
        <error id="stlIfStrFind" severity="performance" msg="Inefficient usage of string::find() in condition; string::starts_with() could be faster." verbose="Either inefficient or wrong usage of string::find(). string::starts_with() will be faster if string::find&amp;#039;s result is compared with 0, because it will not scan the whole string. If your intention is to check that there are no findings in the string, you should compare with std::string::npos." cwe="597" file0="configfile.cpp" sinceDate="27-7-2021">
            <location file="configfile.cpp" line="305"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="configfile.cpp" sinceDate="27-7-2021">
            <location file="configfile.cpp" line="78"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;commentType&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;commentType&amp;#039; is assigned a value that is never used." cwe="563" file0="configfile.cpp" sinceDate="27-7-2021">
            <location file="configfile.cpp" line="211"/>
        </error>
        <error id="noConstructor" severity="style" msg="The class &amp;#039;gui_vfo&amp;#039; does not have a constructor although it has private member variables." verbose="The class &amp;#039;gui_vfo&amp;#039; does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="gui_vfo.cpp" sinceDate="27-7-2021">
            <location file="gui_vfo.h" line="12"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%u in format string (no. 1) requires &amp;#039;unsigned int&amp;#039; but the argument type is &amp;#039;signed int&amp;#039;." verbose="%u in format string (no. 1) requires &amp;#039;unsigned int&amp;#039; but the argument type is &amp;#039;signed int&amp;#039;." cwe="686" file0="sdrberry.cpp" sinceDate="27-7-2021">
            <location file="sdrberry.cpp" line="237"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &amp;#039;s&amp;#039; shadows outer variable" verbose="Local variable &amp;#039;s&amp;#039; shadows outer variable" cwe="398" file0="sdrberry.cpp" sinceDate="27-7-2021">
            <location file="sdrberry.cpp" line="224" info="Shadow variable"/>
            <location file="sdrberry.cpp" line="198" info="Shadowed declaration"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;ret&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;ret&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="sdrstream.cpp" sinceDate="27-7-2021">
            <location file="sdrstream.cpp" line="37"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;i&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;i&amp;#039; is assigned a value that is never used." cwe="563" file0="sdrstream.cpp" sinceDate="27-7-2021">
            <location file="sdrstream.cpp" line="79"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;rc&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;rc&amp;#039; is assigned a value that is never used." cwe="563" file0="sdrstream.cpp" sinceDate="27-7-2021">
            <location file="sdrstream.cpp" line="80"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;frac&amp;lt;0&amp;#039; is always false" verbose="Condition &amp;#039;frac&amp;lt;0&amp;#039; is always false" cwe="570" file0="wstring.cpp" sinceDate="27-7-2021">
            <location file="wstring.cpp" line="152" info="Condition &amp;#039;frac&amp;lt;0&amp;#039; is always false"/>
            <location file="wstring.cpp" line="151" info="Assignment &amp;#039;frac=mantissa*powf(10,prec)&amp;#039;, assigned value is 0"/>
            <location file="wstring.cpp" line="149" info="Assignment &amp;#039;mantissa=val-whole&amp;#039;, assigned value is 0"/>
            <location file="wstring.cpp" line="148" info="&amp;#039;whole&amp;#039; is assigned value &amp;#039;val&amp;#039; here."/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;digit&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;digit&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="wstring.cpp" sinceDate="27-7-2021">
            <location file="wstring.cpp" line="29"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;tmp_char&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;tmp_char&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="wstring.cpp" sinceDate="27-7-2021">
            <location file="wstring.cpp" line="66"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;tmp_char&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;tmp_char&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="wstring.cpp" sinceDate="27-7-2021">
            <location file="wstring.cpp" line="90"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;digit&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;digit&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="wstring.cpp" sinceDate="27-7-2021">
            <location file="wstring.cpp" line="120"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;dummy_writable_char&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;dummy_writable_char&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="wstring.cpp" sinceDate="27-7-2021">
            <location file="wstring.cpp" line="659"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &amp;#039;count&amp;#039; is less than zero." verbose="The unsigned expression &amp;#039;count&amp;#039; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="wstring.cpp" sinceDate="27-7-2021">
            <location file="wstring.cpp" line="833"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/apiplan.c" sinceDate="27-7-2021">
            <location file="api\apiplan.c" line="25"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/execute-dft.c" sinceDate="27-7-2021">
            <location file="api\execute-dft.c" line="25"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/export-wisdom-to-file.c" sinceDate="27-7-2021">
            <location file="api\export-wisdom-to-file.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/export-wisdom-to-string.c" sinceDate="27-7-2021">
            <location file="api\export-wisdom-to-string.c" line="23"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="failed to expand &amp;#039;F77&amp;#039;, Invalid ## usage when expanding &amp;#039;WINDOWS_F77_FUNC&amp;#039;." verbose="failed to expand &amp;#039;F77&amp;#039;, Invalid ## usage when expanding &amp;#039;WINDOWS_F77_FUNC&amp;#039;." sinceDate="27-7-2021">
            <location file="api\f77api.c" line="135"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/flops.c" sinceDate="27-7-2021">
            <location file="api\flops.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/import-system-wisdom.c" sinceDate="27-7-2021">
            <location file="api\import-system-wisdom.c" line="38"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/import-wisdom-from-file.c" sinceDate="27-7-2021">
            <location file="api\import-wisdom-from-file.c" line="64"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/import-wisdom-from-string.c" sinceDate="27-7-2021">
            <location file="api\import-wisdom-from-string.c" line="43"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/import-wisdom.c" sinceDate="27-7-2021">
            <location file="api\import-wisdom.c" line="35"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/malloc.c" sinceDate="27-7-2021">
            <location file="api\malloc.c" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/map-r2r-kind.c" sinceDate="27-7-2021">
            <location file="api\map-r2r-kind.c" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/mkprinter-file.c" sinceDate="27-7-2021">
            <location file="api\mkprinter-file.c" line="53"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/mkprinter-str.c" sinceDate="27-7-2021">
            <location file="api\mkprinter-str.c" line="35"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/mktensor-iodims.c" sinceDate="27-7-2021">
            <location file="api\mktensor-iodims.h" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/mktensor-rowmajor.c" sinceDate="27-7-2021">
            <location file="api\mktensor-rowmajor.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-1d.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-1d.c" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-2d.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-2d.c" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-3d.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-3d.c" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-c2r-1d.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-c2r-1d.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-c2r-2d.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-c2r-2d.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-c2r-3d.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-c2r-3d.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-c2r.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-c2r.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-r2c-1d.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-r2c-1d.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-r2c-2d.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-r2c-2d.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-r2c-3d.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-r2c-3d.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft-r2c.c" sinceDate="27-7-2021">
            <location file="api\plan-dft-r2c.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-dft.c" sinceDate="27-7-2021">
            <location file="api\plan-dft.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-guru-dft-c2r.c" sinceDate="27-7-2021">
            <location file="api\plan-guru-dft-c2r.h" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-guru-dft-r2c.c" sinceDate="27-7-2021">
            <location file="api\plan-guru-dft-r2c.h" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-guru-dft.c" sinceDate="27-7-2021">
            <location file="api\plan-guru-dft.h" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-guru-r2r.c" sinceDate="27-7-2021">
            <location file="api\plan-guru-r2r.h" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-guru-split-dft-c2r.c" sinceDate="27-7-2021">
            <location file="api\plan-guru-split-dft-c2r.h" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-guru-split-dft-r2c.c" sinceDate="27-7-2021">
            <location file="api\plan-guru-split-dft-r2c.h" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-guru-split-dft.c" sinceDate="27-7-2021">
            <location file="api\plan-guru-split-dft.h" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-many-dft-c2r.c" sinceDate="27-7-2021">
            <location file="api\plan-many-dft-c2r.c" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-many-dft-r2c.c" sinceDate="27-7-2021">
            <location file="api\plan-many-dft-r2c.c" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-many-dft.c" sinceDate="27-7-2021">
            <location file="api\plan-many-dft.c" line="26"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-many-r2r.c" sinceDate="27-7-2021">
            <location file="api\plan-many-r2r.c" line="26"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-r2r-1d.c" sinceDate="27-7-2021">
            <location file="api\plan-r2r-1d.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-r2r-2d.c" sinceDate="27-7-2021">
            <location file="api\plan-r2r-2d.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-r2r-3d.c" sinceDate="27-7-2021">
            <location file="api\plan-r2r-3d.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/plan-r2r.c" sinceDate="27-7-2021">
            <location file="api\plan-r2r.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/print-plan.c" sinceDate="27-7-2021">
            <location file="api\print-plan.c" line="23"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/rdft2-pad.c" sinceDate="27-7-2021">
            <location file="api\rdft2-pad.c" line="24"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If X is a macro then please configure it." file0="api/the-planner.c" sinceDate="27-7-2021">
            <location file="api\the-planner.c" line="26"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;AudioSink::handle&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;AudioSink::handle&amp;#039; is not initialized in the constructor." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="13"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;AudioSink::device&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;AudioSink::device&amp;#039; is not initialized in the constructor." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="13"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;AudioSink::hwparams&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;AudioSink::hwparams&amp;#039; is not initialized in the constructor." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="13"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;AudioSink::swparams&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;AudioSink::swparams&amp;#039; is not initialized in the constructor." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="13"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;AudioSink::areas&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;AudioSink::areas&amp;#039; is not initialized in the constructor." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="13"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;AudioSink::samples&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;AudioSink::samples&amp;#039; is not initialized in the constructor." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="13"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;ptr&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;ptr&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="34"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;cptr&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;cptr&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="35"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;ptr&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;ptr&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="336"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;cptr&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;cptr&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="337"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;ptr&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;ptr&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="384"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;cptr&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;cptr&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.cpp" line="385"/>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &amp;#039;AudioSink::write_loop&amp;#039;" verbose="Unused private function: &amp;#039;AudioSink::write_loop&amp;#039;" cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.h" line="41"/>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &amp;#039;AudioSink::write_and_poll_loop&amp;#039;" verbose="Unused private function: &amp;#039;AudioSink::write_and_poll_loop&amp;#039;" cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.h" line="43"/>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &amp;#039;AudioSink::async_direct_loop&amp;#039;" verbose="Unused private function: &amp;#039;AudioSink::async_direct_loop&amp;#039;" cwe="398" file0="archive/AudioSink.cpp" sinceDate="27-7-2021">
            <location file="archive\AudioSink.h" line="45"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;data_c&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;data_c&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="archive/ble_interface.cpp" sinceDate="27-7-2021">
            <location file="archive\ble_interface.cpp" line="32"/>
        </error>
        <error id="localMutex" severity="warning" msg="The lock is ineffective because the mutex is locked at the same scope as the mutex itself." verbose="The lock is ineffective because the mutex is locked at the same scope as the mutex itself." cwe="667" file0="archive/ble_interface.cpp" sinceDate="27-7-2021">
            <location file="archive\ble_interface.cpp" line="128"/>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &amp;#039;s&amp;#039; shadows outer argument" verbose="Local variable &amp;#039;s&amp;#039; shadows outer argument" cwe="398" file0="libblepp/blestatemachine.cc" sinceDate="27-7-2021">
            <location file="libblepp\blestatemachine.cc" line="852" info="Shadow variable"/>
            <location file="libblepp\blestatemachine.cc" line="843" info="Shadowed declaration"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="libblepp/blestatemachine.cc" sinceDate="27-7-2021">
            <location file="libblepp\blestatemachine.cc" line="788"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Span&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Span&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="libblepp/lescan.cc" sinceDate="27-7-2021">
            <location file="libblepp\lescan.cc" line="22"/>
        </error>
        <error id="catchExceptionByValue" severity="style" msg="Exception should be caught by reference." verbose="The exception is caught by value. It could be caught as a (const) reference which is usually recommended in C++." cwe="398" file0="libblepp/lescan.cc" sinceDate="27-7-2021">
            <location file="libblepp\lescan.cc" line="694"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &amp;#039;length&amp;#039; shadows outer variable" verbose="Local variable &amp;#039;length&amp;#039; shadows outer variable" cwe="398" file0="libblepp/lescan.cc" sinceDate="27-7-2021">
            <location file="libblepp\lescan.cc" line="608" info="Shadow variable"/>
            <location file="libblepp\lescan.cc" line="579" info="Shadowed declaration"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: hdc" verbose="Unused variable: hdc" cwe="563" file0="lv_drivers/win_drv.c" sinceDate="27-7-2021">
            <location file="lv_drivers\win_drv.c" line="254"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: ps" verbose="Unused variable: ps" cwe="563" file0="lv_drivers/win_drv.c" sinceDate="27-7-2021">
            <location file="lv_drivers\win_drv.c" line="255"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;tmp.full&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;tmp.full&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/win_drv.c" sinceDate="27-7-2021">
            <location file="lv_drivers\win_drv.c" line="297"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;len&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;len&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/GC9A01.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\GC9A01.c" line="570"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;act_w&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;act_w&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/R61581.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\R61581.c" line="111"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;color_p&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;color_p&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/R61581.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\R61581.c" line="114"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;color16&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;color16&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/R61581.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\R61581.c" line="160"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;act_w&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;act_w&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/R61581.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\R61581.c" line="204"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;color_p&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;color_p&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/R61581.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\R61581.c" line="207"/>
        </error>
        <error id="internalAstError" severity="error" msg="Syntax Error: AST broken, binary operator &amp;#039;=&amp;#039; doesn&amp;#039;t have two operands." verbose="Syntax Error: AST broken, binary operator &amp;#039;=&amp;#039; doesn&amp;#039;t have two operands." file0="lv_drivers/display/SHARP_MIP.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\SHARP_MIP.c" line="119"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;act_w&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;act_w&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/SSD1963.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\SSD1963.c" line="185"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;color_p&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;color_p&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/SSD1963.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\SSD1963.c" line="188"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;cmd_buf[0]&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;cmd_buf[0]&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="lv_drivers/display/UC1610.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\UC1610.c" line="109" info="cmd_buf[0] is overwritten"/>
            <location file="lv_drivers\display\UC1610.c" line="101" info="cmd_buf[0] is assigned"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;buf&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;buf&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/UC1610.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\UC1610.c" line="148"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;buf_size&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;buf_size&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/UC1610.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\UC1610.c" line="149"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="lv_drivers/display/drm.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\drm.c" line="590"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="lv_drivers/display/drm.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\drm.c" line="590"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="lv_drivers/display/drm.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\drm.c" line="593"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="lv_drivers/display/drm.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\drm.c" line="593"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="lv_drivers/display/drm.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\drm.c" line="593"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 4) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 4) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="lv_drivers/display/drm.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\drm.c" line="593"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;location&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;location&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/fbdev.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\fbdev.c" line="178"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;byte_location&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;byte_location&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/fbdev.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\fbdev.c" line="179"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;bit_location&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;bit_location&amp;#039; is assigned a value that is never used." cwe="563" file0="lv_drivers/display/fbdev.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\fbdev.c" line="180"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="lv_drivers/display/fbdev.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\fbdev.c" line="131"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="lv_drivers/display/fbdev.c" sinceDate="27-7-2021">
            <location file="lv_drivers\display\fbdev.c" line="131"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" file0="lv_drivers/indev/AD_touch.c" sinceDate="27-7-2021">
            <location file="lv_drivers\indev\AD_touch.c" line="194"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" file0="lv_drivers/indev/AD_touch.c" sinceDate="27-7-2021">
            <location file="lv_drivers\indev\AD_touch.c" line="241"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;t_num==0&amp;#039; is always true" verbose="Condition &amp;#039;t_num==0&amp;#039; is always true" cwe="571" file0="lv_drivers/indev/FT5406EE8.c" sinceDate="27-7-2021">
            <location file="lv_drivers\indev\FT5406EE8.c" line="129" info="Condition &amp;#039;t_num==0&amp;#039; is always true"/>
            <location file="lv_drivers\indev\FT5406EE8.c" line="126" info="Assignment &amp;#039;t_num=0&amp;#039;, assigned value is 0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;((temp_yH&amp;gt;&amp;gt;6)&amp;amp;0xFF)!=2&amp;#039; is always true" verbose="Condition &amp;#039;((temp_yH&amp;gt;&amp;gt;6)&amp;amp;0xFF)!=2&amp;#039; is always true" cwe="571" file0="lv_drivers/indev/FT5406EE8.c" sinceDate="27-7-2021">
            <location file="lv_drivers\indev\FT5406EE8.c" line="159" info="Condition &amp;#039;((temp_yH&amp;gt;&amp;gt;6)&amp;amp;0xFF)!=2&amp;#039; is always true"/>
            <location file="lv_drivers\indev\FT5406EE8.c" line="155" info="Assignment &amp;#039;temp_yH=0&amp;#039;, assigned value is 0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;irq==0&amp;#039; is always true" verbose="Condition &amp;#039;irq==0&amp;#039; is always true" cwe="571" file0="lv_drivers/indev/XPT2046.c" sinceDate="27-7-2021">
            <location file="lv_drivers\indev\XPT2046.c" line="71" info="Condition &amp;#039;irq==0&amp;#039; is always true"/>
            <location file="lv_drivers\indev\XPT2046.c" line="69" info="Assignment &amp;#039;irq=0&amp;#039;, assigned value is 0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;buf&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;buf&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lv_drivers/indev/XPT2046.c" sinceDate="27-7-2021">
            <location file="lv_drivers\indev\XPT2046.c" line="64"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;LV_KEY_BACKSPACE;USE_KEYBOARD&amp;#039; since the value of &amp;#039;LV_KEY_BACKSPACE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;LV_KEY_BACKSPACE;USE_KEYBOARD&amp;#039; since the value of &amp;#039;LV_KEY_BACKSPACE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="27-7-2021">
            <location file="lv_drivers\indev\keyboard.c" line="113"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;LV_KEY_DEL;USE_KEYBOARD&amp;#039; since the value of &amp;#039;LV_KEY_DEL&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;LV_KEY_DEL;USE_KEYBOARD&amp;#039; since the value of &amp;#039;LV_KEY_DEL&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="27-7-2021">
            <location file="lv_drivers\indev\keyboard.c" line="118"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;label&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;label&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_1.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_1.c" line="20"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;obj&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;obj&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_1.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_1.c" line="21"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;label&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;label&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_3.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_3.c" line="25"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;obj&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;obj&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_3.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_3.c" line="26"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;label&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;label&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_4.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_4.c" line="22"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;obj&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;obj&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_4.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_4.c" line="23"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;label&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;label&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_5.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_5.c" line="30"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;obj&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;obj&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_5.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_5.c" line="31"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;label&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;label&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_6.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_6.c" line="20"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;obj&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;obj&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="lvgl/examples/layouts/grid/lv_example_grid_6.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\layouts\grid\lv_example_grid_6.c" line="21"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;txt&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;txt&amp;#039; is assigned a value that is never used." cwe="563" file0="lvgl/examples/widgets/btnmatrix/lv_example_btnmatrix_1.c" sinceDate="27-7-2021">
            <location file="lvgl\examples\widgets\btnmatrix\lv_example_btnmatrix_1.c" line="10"/>
        </error>
    </errors>
</results>
